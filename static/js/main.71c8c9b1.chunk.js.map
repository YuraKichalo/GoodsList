{"version":3,"sources":["components/Login.js","components/GoodsItem.js","actions/index.js","actions/types.js","components/ModalPopup.js","components/GoodsList.js","components/App.js","reducers/GoodsReducer.js","reducers/index.js","index.js"],"names":["Login","renderError","error","touched","className","renderInput","input","label","meta","autoComplete","onSubmit","formValues","console","log","props","history","push","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","GoodsItem","state","showDetails","removeItem","deleteItem","index","setState","src","alt","description","time","display","onClick","style","connect","type","payload","ModalPopup","renderInputs","closePopup","close","addItem","showPopup","formWrapper","errors","images","item","GoodsList","renderGoods","map","key","show","imagesList","App","path","exact","INITIAL_STATE","combineReducers","formReducer","action","filter","img","persistConfig","storage","blacklist","persistReducers","persistReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.71c8c9b1.chunk.js","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nimport '../styles/Login.css';\n\nclass Login extends React.Component {\n    renderError = ({error, touched}) => {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            )\n        }\n    };\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            <div className={className}>\n                <label className=\"label\">\n                    <span>{label}</span>\n                    <input {...input} autoComplete=\"off\" />\n                </label>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = (formValues) => {\n        console.log(formValues)\n        this.props.history.push('/goods')\n    };\n\n    render() {\n        return (\n            <div className= \"Login ui form error\">\n                <form className=\"loginForm\" onSubmit={this.props.handleSubmit(this.onSubmit)} >\n                    <Field name=\"name\" component={this.renderInput} label=\"Please, enter your name\" />\n                        <button className=\"ui primary button\">Submit</button>\n                </form>\n            </div>\n        );\n    };\n}\n\nconst validate = (formValues) => {\n    const error = {};\n\n    if (!formValues.name) {\n        error.name = 'You must enter a name';\n    }\n\n    return error;\n};\n\nexport default reduxForm({\n    form: 'LoginForm',\n    validate\n})(Login);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {deleteItem} from '../actions';\n\nclass GoodsItem extends React.Component {\n    state = {showDetails: false}\n\n    removeItem = () => {\n        const {deleteItem, index} = this.props;\n\n        deleteItem(index);\n    };\n\n    showDetails = () => {\n        this.setState({showDetails: !this.state.showDetails});\n    };\n\n\n    render() {\n        const {src, alt, description, time} = this.props;              // add LOGIC for CLICK on oneCARD\n        const display = this.state.showDetails ? 'block' : 'none';\n\n        return (\n            <div className=\"ui card\">\n                <div onClick={this.showDetails} className=\"image\">\n                    <img src={src} alt={alt} />\n                </div>\n                <h4 className=\"header\">{alt}</h4>\n                <div style={{display:display}} className=\"content\">\n                    <div className=\"description\">\n                        {description}\n                    </div>\n                </div>\n                <div style={{display:display}} className=\"extra content\">\n                    <i className=\"clock outline icon\"></i>\n                    {time}\n                </div>\n                <button onClick={this.removeItem} className=\"ui red button\">Delete</button>\n            </div>\n        );\n    };\n};\n\nexport default connect(null, {deleteItem})(GoodsItem);","import {\n    DELETE,\n    CLOSE_POPUP,\n    SHOW_POPUP,\n    ADD} \nfrom './types';\n\nexport const deleteItem = (index) => {\n    return {\n        type: DELETE,\n        payload: index\n    }\n};\n\nexport const close = () => {\n    return {\n        type: CLOSE_POPUP\n    };\n}\n\nexport const show = () => {\n    return {\n        type: SHOW_POPUP\n    };\n};\n\nexport const addItem = (item) => {\n    return {\n        type: ADD,\n        payload: item\n    };\n};","export const DELETE = 'DELETE';\nexport const CLOSE_POPUP = 'CLOSE_POPUP';\nexport const SHOW_POPUP = 'SHOW_POPUP';\nexport const ADD = 'ADD'; ","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\n\nimport {close, addItem} from '../actions'; \n\nclass ModalPopup extends React.Component {\n    renderError = ({error, touched}) => {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            )\n        }\n    };\n\n    renderInputs = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            <div className={className}>\n                <label>\n                    {label}\n                    <input {...input} autoComplete=\"off\" />\n                </label>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    closePopup = () => {\n        this.props.close();\n    };\n\n    onSubmit = (formValues) => {\n        console.log(formValues)\n\n        this.props.addItem(formValues)\n        this.props.close();\n    }\n\n    render() {\n        const display = this.props.showPopup ? \"flex\" : \"none\";\n\n        return (\n            <div style={{display: display}} className=\"modal\">\n                <div className=\"modal-content\">\n                    <i onClick={this.closePopup} className=\"red large close icon\"></i>\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                        <Field name=\"alt\" component={this.renderInputs} label=\"Restaurant name\" />\n                        <Field name=\"description\" component={this.renderInputs} label=\"Description\" />\n                        <Field name=\"src\" component={this.renderInputs} label=\"Restaurant image url\" />\n                        <Field name=\"time\" component={this.renderInputs} label=\"Delivery time\" />\n                        <button className=\"ui primary button\">Add</button>\n                    </form>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.alt) {\n        errors.alt = 'You must enter a name';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n\n    if (!formValues.src) {\n        errors.src = 'You must enter a url';\n    }\n\n    if (!formValues.time) {\n        errors.time = 'You must enter a time';\n    }\n\n    return errors;\n};\n\nconst formWrapper = reduxForm({\n    form: 'AddItem',\n    validate\n})(ModalPopup);\n\nconst mapStateToProps = (state) => {\n    return {showPopup: state.images.showPopup}\n};\n\nexport default connect(mapStateToProps, {close, addItem})(formWrapper);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {show} from '../actions';\nimport GoodsItem from './GoodsItem';\nimport ModalPopup from './ModalPopup';\nimport '../styles/GoodsList.css';\n\nclass GoodsList extends React.Component {\n    renderGoods = () => {\n        return this.props.images.map(({src, alt, description, time}, index) => {\n            return (\n                <GoodsItem\n                    src={src}\n                    alt={alt}\n                    description={description}\n                    time={time}\n                    key={index}\n                    index={index}\n                />\n            );\n        });\n    }\n\n    showPopup = () => {\n        this.props.show()\n    };\n\n    render() {\n        return (\n            <div className=\"GoodsList\">\n                <h1>Choose a restaurant!</h1>\n                <div className=\"ui three doubling link cards\">\n                    {this.renderGoods()}\n                </div>\n                <button onClick={this.showPopup} className=\"ui primary button\">Add restaurant</button>\n                <ModalPopup />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {images: state.images.imagesList}\n};\n\nexport default connect(mapStateToProps, {show})(GoodsList);","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport Login from './Login';\nimport GoodsList from './GoodsList';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App ui container\">\n                <BrowserRouter>\n                    <div>\n                        <Route path=\"/\" exact component={Login} />\n                        <Route path=\"/goods\" exact component={GoodsList} />\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    };\n}\n\nexport default App;","import {\n    DELETE,\n    CLOSE_POPUP,\n    SHOW_POPUP,\n    ADD}\nfrom '../actions/types';\n\nconst INITIAL_STATE = {\n    imagesList: [\n        {src: 'images/druzi_cafe.png', alt: 'Druzi cafe', description: 'american and european food', time: '30-40 min'},\n        {src: 'images/hot_dogs.png', alt: 'Yizha', description: 'american burgers and hot dogs, street food', time: '35-45 min'},\n        {src: 'images/mac.png', alt: 'McDonalds', description: 'burgers', time: '25-35 min'},\n        {src: 'images/milk_bar.png', alt: 'Milk bar', description: 'deserts, european food', time: '15-20 min'}\n    ],\n    showPopup: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case DELETE:\n            return {...state, imagesList: state.imagesList.filter((img, index) => action.payload !== index)};\n        case CLOSE_POPUP:\n            return {...state, showPopup: false};\n        case SHOW_POPUP:\n            return {...state, showPopup: true};\n        case ADD:\n            return {...state, imagesList: [...state.imagesList, action.payload]};\n        default:\n            return state;\n    };\n};","import {combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\n\nimport GoodsReducer from './GoodsReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    images: GoodsReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['form']\n};\n\nconst persistReducers = persistReducer(persistConfig, reducers); \nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(persistReducers, composeEnhancers(applyMiddleware())); \nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}